---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';
import ThemeToggle from '../components/ThemeToggle.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<script>
    		(function() {
      			const saved = localStorage.getItem('theme');
      			const theme = saved || 'dark';
      			document.documentElement.setAttribute('data-theme', theme);
    		})();
  		</script>

		<BaseHead title={title} description={description} />
		<style>
			html, body {
  				background: var(--bg);
  				color: var(--text);
			}
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}

			#nova-loader {
  				position: fixed;
  				top: 0;
  				left: 0;
  				width: 100%;
  				height: 100%;
  				background: black;
  				display: flex;
  				align-items: center;
  				justify-content: center;
  				z-index: 9999;
			}

			.nova-core {
  				width: 40px;
  				border-radius: 50%;
  				background: radial-gradient(circle at center, #8a2be2, #4b0082);
  				box-shadow: 0 0 20px #8a2be2, 0 0 40px #00ffff;
  				animation: pulse 1.5s infinite ease-in-out;
			}

			.nova-trail {
  				position: absolute;
 				width: 80px;
  				height: 80px;
  				border: 2px dashed rgba(138, 43, 226, 0.5);
  				border-radius: 50%;
  				animation: orbit 2s linear infinite;
			}

			@keyframes pulse {
  				0%, 100% { transform: scale(1); opacity: 1; }
  				50% { transform: scale(1.3); opacity: 0.7; }
			}

			@keyframes orbit {
  				0% { transform: rotate(0deg); }
  				100% { transform: rotate(360deg); }
			}

			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: var(--info-text);
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
				color: var(--accent);
			}
			.date {
				margin-bottom: 0.5em;
				color: var(--date-color);
			}
			.last-updated-on {
				font-style: italic;
			}
			.title h1 {
  				margin: 0 0 0.5em 0;
  				font-size: 2.5rem; 
  				line-height: 1.2;
  				word-break: keep-all; 
  				overflow-wrap: break-word;
			}

			@media (max-width: 600px) {
  				.title h1 {
    				font-size: 1.6rem;
  				}
			}
		</style>
	</head>

	<body>
		<div id="nova-loader">
  			<div class="nova-core"></div>
  			<div class="nova-trail"></div>
		</div>
		<script>
  			window.addEventListener("load", () => {
    			const loader = document.getElementById("nova-loader");
    			if (loader) {
      				loader.style.opacity = "0";
      				loader.style.transition = "opacity 0.5s ease";
      				setTimeout(() => loader.remove(), 500);
    			}
  			});
		</script>
		<Header />
		<ThemeToggle />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <Image width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
